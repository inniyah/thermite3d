struct a2v
{
    float4 Position : POSITION; //in object space
    float3 Normal : NORMAL;
	float2 Alpha : TEXCOORD0;
};

struct v2f
{
    float4 Position : POSITION; //in projection space
    float4 Color : COLOR;
    float4 TexCoords : TEXCOORD0;
    float4 Normal : TEXCOORD1;
    float2 Alpha : TEXCOORD2;	
};

v2f main(a2v IN, uniform float4x4 world, uniform float4x4 viewProj)
{    
	//The  transformation is performed in two stages to *precisely* match
	//what the other vertex program does. Otherwise z-fighting can result.
	v2f OUT;
    OUT.Position = mul(world, IN.Position);
    OUT.Position = mul(viewProj, OUT.Position);
    return OUT;
}

